---
- hosts: all
  gather_facts: yes
  sudo: yes

  vars_files:
    - vars/main.yaml

  # install postgres and postgis, mount a disk, change the data directory
  tasks:

    - name: Install apt packages
      apt: name={{item}} state=present update_cache=yes
      with_items: apt_packages 

    # NEWSLYNX-CORE

    - name: ensure the root directory EXISTS
      file: "state=directory path={{root_dir}} mode=0700"

    - name: Clone newslynx-repos to remote server.
      git: repo=git://github.com/newslynx/{{item}}.git 
           dest={{root_dir}}/{{item}} 
           accept_hostkey=true
      with_items: newslynx_python_repos

    - name: Create virtual environment.
      command: virtualenv --python=/usr/bin/python --no-site-packages {{python_env}}

    - name: Install Newslynx-Core Repos
      pip: name='.' chdir={{root_dir}}/{{item}}/ virtualenv={{python_env}}
      with_items: newslynx_python_repos

    - name: ensure the dot newslynx directory EXISTS
      file: "state=directory path=~/.newslynx/ mode=0700"

    - name: Copy Config Template
      template: src="templates/config.yaml.j2"
                dest="~/.newslynx/config.yaml"
                mode=0777

    - name: ensure the dot newslynx defaults directory EXISTS
      file: "state=directory path=~/.newslynx/defaults mode=0700"

    - name: Make defaults.
      command: "make defaults"
      args:
        chdir: "{{root_dir}}/newslynx-core/"
      when: incl_defaults

    # POSTGRES

    - include: postgres.yaml

    - name: set postgres password
      command: psql -d postgres -U postgres -c "ALTER USER postgres with password '{{pg_password}}'"
      sudo: yes
      sudo_user: postgres

    - name: create newslynx db
      command: "psql -d postgres -U postgres -c 'CREATE DATABASE {{pg_name}}'"
      sudo: yes
      sudo_user: postgres

    - name: initialize newslynx database.
      command: "{{python_env}}/bin/newslynx init"
      sudo: yes 
      args:
        chdir: "{{root_dir}}/newslynx-core/"

    # REDIS


    # SUPERVISOR

    - name: ensure the log directory EXISTS
      file: "state=directory path={{root_dir}}/logs mode=0700"

    - include: supervisor.yaml  
      vars: 
        name: api  
        exec: "PSYCOGREEN=true {{python_env}}/bin/gunicorn newslynx.views:app -b 127.0.0.1:{{api_port}} -w {{api_workers}} -k gevent -t {{api_timeout}}"
        directory: "{{root_dir}}/newslynx-core"
        logdir: "{{root_dir}}/logs"
        numprocs: 1
        user: root

    - include: supervisor.yaml 
      vars: 
        name: bulk
        exec: "{{python_env}}/bin/rqworker bulk"
        directory: "{{root_dir}}/newslynx-core"
        logdir: "{{root_dir}}/logs"
        numprocs: "{{bulk_workers}}"
        user: root

    - include: supervisor.yaml 
      vars:
        name: recipe
        exec: "{{python_env}}/bin/rqworker recipe"
        directory: "{{root_dir}}/newslynx-core"
        logdir: "{{root_dir}}/logs"
        numprocs: "{{recipe_workers}}"
        user: root

    - include: supervisor.yaml
      vars: 
        name: cron
        exec: "{{python_env}}/bin/newslynx cron --interval={{cron_interval}}"
        directory: "{{root_dir}}/newslynx-core"
        logdir: "{{root_dir}}/logs"
        numprocs: 1
        user: root
